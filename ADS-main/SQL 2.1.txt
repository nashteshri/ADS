EXPERIMENT 2:

Problem Statement 1:
 Create a super type person
 Person: attributes-->fname (first name), lname (last name) dob (date of birth)
 Methods-->FullName(to return full name), OnDate(return dob)
 Create a sub type EmpObj which will inherit the person type attributes and methods.
 Empobj (inherits Person): attributes--> job, sal, da(allowance), doj(date of joining)
 Methods-- > Earn (return earning), OnDate(overriding return doj)

QUERY:::

CREATE TABLE Person (
    Person_ID NUMBER PRIMARY KEY,
    FName VARCHAR2(50),
    LName VARCHAR2(50),
    DOB DATE
);

CREATE TABLE EmpObj (
    Emp_ID NUMBER PRIMARY KEY,
    Person_ID NUMBER REFERENCES Person(Person_ID),
    Job VARCHAR2(50),
    Sal NUMBER(10, 2),
    DA NUMBER(10, 2),
    DOJ DATE
);

-- Insert into Person table
INSERT INTO Person (Person_ID, FName, LName, DOB)
VALUES (1, 'John', 'Doe', TO_DATE('1980-01-15', 'YYYY-MM-DD'));

INSERT INTO Person (Person_ID, FName, LName, DOB)
VALUES (2, 'Jane', 'Smith', TO_DATE('1990-05-20', 'YYYY-MM-DD'));

-- Insert into EmpObj table
INSERT INTO EmpObj (Emp_ID, Person_ID, Job, Sal, DA, DOJ)
VALUES (101, 1, 'Engineer', 50000, 5000, TO_DATE('2010-06-15', 'YYYY-MM-DD'));

INSERT INTO EmpObj (Emp_ID, Person_ID, Job, Sal, DA, DOJ)
VALUES (102, 2, 'Manager', 70000, 7000, TO_DATE('2015-08-10', 'YYYY-MM-DD'));


SELECT 
    e.Emp_ID AS Employee_ID,
    CONCAT(CONCAT(p.FName, ' '), p.LName) AS Full_Name,
    e.DOJ AS Date_of_Joining,
    p.DOB AS Date_of_Birth,
    (e.Sal + e.DA) AS Earning
FROM 
    EmpObj e
JOIN 
    Person p ON e.Person_ID = p.Person_ID;

